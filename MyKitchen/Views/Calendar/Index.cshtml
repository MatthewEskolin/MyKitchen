
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>
<h1 id="h1draggable" class="draggable-event">DRAG ME</h1>
<div id="itemContainer">

</div>
<div id="calendar">
</div>


<link rel="stylesheet" type="text/css" href="/lib/fullcalendar/core/main.min.css"/>
<link rel="stylesheet" type="text/css" href="/lib/fullcalendar/daygrid/main.min.css"/>

@section Scripts
{

    <script src="/lib/fullcalendar/core/main.min.js"></script>
    <script src="/lib/fullcalendar/daygrid/main.min.js"></script>
    <script src="/lib/fullcalendar/interaction/main.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function() {
            var events = [];

            //Get Events
            $.ajax({
                type: "GET",
                url: "/calendar/GetEvents",
                success: function(data) {
                    GenerateCalender(events);
                    return;
                    $.each(data,
                        function(i, v) {
                            events.push({
                                title: v.subject,
                                description: v.Description,
                                start: v.start, //moment(v.Start),
                                end: v.end != null ? v.end : null,
                                color: v.ThemeColor,
                                allDay: v.IsFullDay
                            });
                        });

                },
                error: function(error) {
                    alert('failed' + error);
                }
            });

            //Get Available Items
            $.ajax({
                type: "GET",
                url: "/calendar/GetAvailableItems",
                success: function(data) {

                    $.each(data,
                        function(i, v) {
                            //for each item create a new div box;
                            $("#itemContainer") .append("<div class='draggableitem' data-event='{\"title\":\"" + v.itemName + "\"}'>" + v.itemName + " </div>");

                        });

                },
                error: function(error) {
                    alert('failed' + error);
                }
            });

            //Create Calender
            function GenerateCalender(events) {

                var calendarEl = document.getElementById('calendar');
                var draggableEL = document.getElementById('itemContainer');
                var Draggable = FullCalendarInteraction.Draggable;

                var calendar = new FullCalendar.Calendar(calendarEl,
                    {
                        plugins: ['dayGrid', 'interaction'],
                        events: events,
                        editable: true,
                        droppable: true,
                        fixedWeekCount: false,
                        height: 600,

                        //DOC SAVE
                        //dateClick: function() {
                        //    alert('a day has been clicked!');
                        //}

                        eventReceive: function(info) {
                                $.ajax({
                                    url: '/calendar/SaveNewEvent',
                                    data: 'title="Test"',
                                    type: "POST",
                                    success: function (json) {
                                        console.log("SaveNewEvent returned");
                                    },
                                    failure: function(json) {
                                        console.log("SaveNewEvent failed.")
                                    }
                                });
                        }
                    });

                //DOC SAVE               
                //calendar.on('dateClick',
                //    function(info) {
                //        alert(info.dateStr);
                //    });







                calendar.render();

                // ReSharper disable once ConstructorCallNotUsed
                new Draggable(draggableEL,
                    {
                        itemSelector: '.draggableitem'

                    });



            }
        });


    </script>

}
