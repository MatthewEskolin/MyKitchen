@model MyKitchen.Controllers.SearchModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .button-container
    {
        display:flex;
    }
    .search-bar
    {
        border:1px solid blue;
    }
    
    <!-- styles for draggable -->
    .ditem-container 
    {
        display: inline-flex !important; /* Use flexbox to align child divs horizontally */
    }

    .square {
        width: 25px; /* Adjust the width of the square as needed */
        height: 25px;; /* Square dimensions */
        background-color: #3498db; /* Background color for the square */
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .text-rectangle {
        padding: 10px; /* Add padding to the text rectangle */
        background-color: #e74c3c; /* Background color for the text rectangle */
        color: #fff; /* Text color for the text rectangle */
    }

    .square img {
        max-width: 100%; /* Ensure the image doesn't exceed the square dimensions */
        max-height: 100%; /* Ensure the image doesn't exceed the square dimensions */
    }

</style>

<form id="fmSearchItems" name="searchForm" method="post" asp-action="SearchForItems">
    <div class="search-bar">
        <input class="input-text form-control p-2" type="text" name="searchText" placeholder="Search">
        <i class="icon fa fa-search" style="cursor:pointer;" onclick="$('#fmSearchItems').submit()"></i>
        Show Meals Only? <input type="checkbox" class="form-control" name="CbShowMealsOnly" value="1" />
        Show Queued Only <input type="checkbox" class="form-control" name="CbShowQueuedOnly" value="1" />
    </div>

    <h1 id="h1draggable" class="draggable-event"></h1>
    <br/>
    <div id="itemContainer"> </div>

    TEST DIV START
    <div id="itemContainer2">
        <div class="draggableitem2">
            <div class="square">
                <img src="your-icon.jpg" alt="Icon">
            </div>
            <div class="text-rectangle">
                Yum ! Potatoes
            </div>
        </div>
    </div>
@*    <div class="draggableitem draggableitem-meal">


    </div>
    var $newDiv = $("<div>", {
    class: "draggableitem " + itemClass,
    "data-event": JSON.stringify(dataEvent),
    text: v.itemName
    });

*@    
    TEST DIV END

    <!-- Pagination -->
    <div class="pagination">
        <div class="button-container">
            <!-- Wrap each input with a div and give them unique IDs or classes -->
            <div id="previousButtonDiv">
                <input id="inPrevious" type="submit" value="Previous" onclick="setAction('previous')" />
            </div>
            <div id="nextButtonDiv">
                <input id="inNext" type="submit" value="Next" onclick="setAction('next')" />
            </div>
        </div>
    </div>

    <input type="hidden" id="idPageSize" name="pageSize" value="@Model.PageSize" />
    <input type="hidden" id="idPageIndex" name="pageIndex" value="@Model.PageIndex" />
    <input type="hidden" id="idTotalPages" name="pageIndex" value="@Model.TotalPages" />
    <input type="hidden" name="action" value="" />
</form>


<div style="clear: both;"></div>
<div id="calendar">
</div>


<link rel="stylesheet" type="text/css" href="/lib/fullcalendar/core/main.min.css" />
<link rel="stylesheet" type="text/css" href="/lib/fullcalendar/daygrid/main.min.css" />

@section Scripts
    {

    <script src="/lib/fullcalendar/core/main.min.js"></script>
    <script src="/lib/fullcalendar/daygrid/main.min.js"></script>
    <script src="/lib/fullcalendar/interaction/main.min.js"></script>
    @*<script src="/lib/superagent/superagent.js"></script>*@

    <script type="text/javascript">
    
        var theCalendar = null;
        var eventSources = [
            {
                url: "/calendar/GetEventsFeed",
                method: 'GET',
                failure: function () {
                    alert('could not load items');
                },
                color: 'blue',
                textColor: 'black'
            }
        ];

        
        $(document).ready(function () {
            var events = [];

            GenerateCalendar(eventSources);

            var form = $("#fmSearchItems");
            var formData = form.serialize();

        //Get Available Food Items & Meals
        $.ajax({
                type: "POST",
                url: "/calendar/SearchForItems",
                data: formData,
                success: function (data) {
                    ResultsReceived(data);
                },
                error: function (error) {
                    // Handle errors gracefully
                    alert('Failed: ' + error.statusText);
                }
                });

        //Add Search Event Handler 
        $("#fmSearchItems").submit(function (event) {
                
                var formData = $(this).serialize();

                $.ajax({
                    type: "POST",
                    url: "/calendar/SearchForItems",
                    data: formData
                }).done(function (data) {
                    ResultsReceived(data);
                });
                
                //do not do a normal form submit - ajax call replaces normal http post
                event.preventDefault();
            });
           
        });            

        function ResultsReceived(data)
            {
                // Initialize the availableItems array
                window.availableItems = [];
                
                // Cache the itemContainer element for better performance
                var itemContainer = $("#itemContainer");
                $(itemContainer).empty();
                
                //save page model results to hidden fields
                $("#idPageSize").val(data.pageSize);
                $("#idPageIndex").val(data.pageIndex);
                $("#idTotalPages").val(data.totalPages);
                
                NextButtonDisplay() 
                ShowPreviousDisplay() 

                    //// Create the div element and append it to the itemContainer
                    //var $newDiv = $("<div>", {
                    //    class: "draggableitem " + itemClass,
                    //    "data-event": JSON.stringify(dataEvent),
                    //    text: v.itemName
                    //});
                    
                    //craft the div with icon                    
                // Iterate through the data array
                $.each(data.items, function (i, v) {
                    // Push the item to the availableItems array
                    window.availableItems.push(v);

                    // Escape single quotes in the item name
                    var escapedItemName = v.itemName.replace(/'/g, "&#39;");

                    // Create the dataEvent object as a JavaScript object
                    var dataEvent = {
                        itemId: v.itemId,
                        title: escapedItemName,
                        itemType: v.itemType
                    };

                    // Determine the CSS class based on item type
                    var itemClass = v.itemType === "MEAL" ? "draggableitem-meal" : "draggableitem-foodItem";

                    // Create the div element and append it to the itemContainer
                    var $newDiv = $("<div>", {
                        class: "draggableitem " + itemClass,
                        "data-event": JSON.stringify(dataEvent),
                        text: v.itemName
                    });
                    itemContainer.append($newDiv);
                });
            }

        //Create Calendar
        function GenerateCalendar(eventSources) {

                var calendarEl = document.getElementById('calendar');
                var draggableEL = document.getElementById('itemContainer');
                var draggableEL2 = document.getElementById('itemContainer2');
                var Draggable = FullCalendarInteraction.Draggable;

                theCalendar = new FullCalendar.Calendar(calendarEl,
                    {
                        plugins: ['dayGrid', 'interaction'],
                        eventSources: eventSources,
                        editable: true,
                        droppable: true,
                        fixedWeekCount: false,
                        height: 600,
                        displayEventTime: false,
                        footer: {
                            left: 'custom1'
                        },
                        eventRender: function (info) {

                            $(info.el).find('.fc-content').append("<img style='width:28px;height:28px;float:right;' id='svg-delete-event' src='/images/red-trash-delete-icon.svg' />");

                            if (info.event.extendedProps.mealID != null || info.event.extendedProps.itemType == "MEAL") {
                                info.el.style.backgroundColor = "orange"
                                info.el.style.color = "white";
                            }
                            else {
                                info.el.style.backgroundColor = "blue"
                                info.el.style.color = "white";
                            }

                            $(info.el).find("#svg-delete-event").click(function (event) {

                                //clicking delete should only trigger the click event for the trash can icon here, and should not trigger the click event for the entire event which would bring user to details view.
                                event.stopPropagation();
                                //remove event from calendar
                                info.event.remove();

                                //also remove from backend stroage
                                $.ajax({
                                    url: '/calendar/RemoveEvent/',
                                    data: JSON.stringify({
                                        Subject: info.event.title,
                                        Start: info.event.start,
                                        IsFullDay: "true",
                                        EventID: info.event.extendedProps.eventID,

                                    }),
                                    type: "POST",
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (json) {
                                        console.log("Delete Event returned");
                                    },
                                    failure: function (json) {
                                        console.log("Delete Event failed.");
                                    }

                                });

                            });



                                $(info.el).find("#svg-delete-event").mouseover(function () {

                                    $(this).attr("src", "/images/red-trash-delete-icon-hover.svg")
                                });


                            $(info.el).find("#svg-delete-event").mouseout(function () {

                                $(this).attr("src", "/images/red-trash-delete-icon.svg")
                            });

                            $(info.el).find("#svg-delete-event").hide();

                        },

                        eventClick: function (info) {

                            //if food item, redirect to food item
                            if (info.event.extendedProps.itemType == "FOOD ITEM") {

                                window.location.href = "/FoodItems/Details/" + info.event.extendedProps.itemId;
                            }
                            else if (info.event.extendedProps.itemType == "MEAL") {

                                window.location.href = "/MealBuilder/MealDetails/" + info.event.extendedProps.itemId;;
                            }
                            else {

                                window.location.href = "/FoodItems/Details/" + info.event.extendedProps.foodItemID;

                                //if meal, redirect to meal
                                //TODO NOT IMPLEMENTED
                            }
                        },
                        eventMouseEnter: function (info) {

                            //find remove button and make it visible
                            $(info.el).find('#svg-delete-event').show();
                        },
                        eventMouseLeave: function (info) {

                            //find remove button and make it visible
                            $(info.el).find('#svg-delete-event').hide();
                        },
                        eventDrop: function (info) {

                            $.ajax({
                                url: '/calendar/UpdateEvent',
                                data: JSON.stringify({
                                    Subject: info.event.title,
                                    Start: info.event.start,
                                    IsFullDay: "true",
                                    EventID: info.event.extendedProps.eventID,


                                }),
                                type: "POST",
                                contentType: 'application/json; charset=utf-8',
                                success: function (json) {
                                    console.log("Update Event returned");
                                },
                                failure: function (json) {
                                    console.log("Update Event failed.");
                                }

                            });

                        },
                        eventReceive: function (info) {

                            var mealId, foodItemId;

                            var sitemId = info.event.extendedProps.itemId
                            var foodItem = window.availableItems.find(x => x.itemId == sitemId);

                            if (foodItem.itemType == "FOOD ITEM") {
                                foodItemId = foodItem.itemId;
                                mealId = null;


                            }
                            else if (foodItem.itemType == "MEAL") {
                                mealId = foodItem.itemId;
                                foodItemId = null;

                            }

                            $.ajax({
                                url: '/calendar/SaveNewEvent',
                                data: JSON.stringify({
                                    Subject: foodItem.itemName,
                                    Start: info.event.start,
                                    IsFullDay: "true",
                                    FoodItemId: foodItemId,
                                    MealID: mealId
                                }),
                                type: "POST",
                                //contentType: 'application/x-www-form-urlencoded',
                                contentType: 'application/json; charset=utf-8',
                                //contentType:'json',
                                success: function (json) {
                                    console.log("SaveNewEvent returned");
                                    info.event.setExtendedProp("eventID", json)

                                },
                                failure: function (json) {
                                    console.log("SaveNewEvent failed.");
                                }
                            });
                        },
                        customButtons: {
                            custom1: {
                                text: 'Clear Month',
                                click: function (whatisthis) {

                                    var curMonth = theCalendar.getDate().getMonth();


                                    //call ajax to remove all events in the current month
                                    $.ajax({
                                        url: '/calendar/ClearMonth',
                                        data: JSON.stringify({
                                            Month: curMonth

                                        }),
                                        type: "POST",
                                        contentType: 'application/json; charset=utf-8',
                                        success: function (json) {
                                            console.log("Clear month returned");
                                            theCalendar.getEventSources()[0].refetch();

                                        },
                                        failure: function (json) {
                                            console.log("Clear month failed")
                                        }

                                    });


                                    //reload calendar from db


                                    alert('clicked custom button does this trigger build? DEBUG TEST!');
                                }
                            }
                        }


                    });

                theCalendar.render();

                new Draggable(draggableEL,
                    {
                        itemSelector: '.draggableitem',
                        longPressDelay: 200

                    });

            new Draggable(draggableEL2,
                {
                    itemSelector: '.draggableitem2',
                    longPressDelay: 200
                });
                    
                


            }
        //Utilities
        function setAction(actionName) {
            // Set the value of the hidden input field based on the clicked button
            document.querySelector('input[name="action"]').value = actionName;

            if (actionName == "next") {
                var $elem = $("#idPageIndex");

                var pageIndex = Number($("#idPageIndex").val());
                var newValue = pageIndex + 1;

                $elem.val(newValue);

            }
            if (actionName == "previous") {
                var $elem = $("#idPageIndex");

                var pageIndex = Number($("#idPageIndex").val());
                var newValue = pageIndex - 1;

                $elem.val(newValue);

            }

        }

        function SetVisible(visible, id)
        {
            if(visible)
            {
                $('#' + id).show();
            }
            else
            {
                $('#' + id).hide();
            }
        }

        function NextButtonDisplay()
        {
            var pageIndex = $("#idPageIndex").val();
            var totalPages = $("#idTotalPages").val();

            var show =  pageIndex < totalPages;
            SetVisible("nextButtonDiv",show)
            
        }

        function ShowPreviousDisplay()
        {
            var pageIndex = $("#idPageIndex").val();
            var totalPages = $("#idTotalPages").val();

            var show = pageIndex > 1;
            SetVisible("previousButtonDiv",show);
        }

    </script>

}


@section Selenium
    {
    <div class="e2e-page-calendar-action-index"></div>

}

